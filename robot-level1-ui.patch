diff --git a/apps/web/src/app/globals.css b/apps/web/src/app/globals.css
index 969090b..457e648 100644
--- a/apps/web/src/app/globals.css
+++ b/apps/web/src/app/globals.css
@@ -1,96 +1,43 @@
 @import "tailwindcss";
 
-@layer base {
-  :root {
-    /* ROBOT Design Tokens */
-    --color-primary: #CB5544; /* ROBOT Red */
-    --color-surface: #FFF7EA; /* Warm Paper */
-    --color-ink: #062430;     /* Deep Ink */
-    --radius-lg: 16px;
-    --radius-md: 12px;
-    --radius-sm: 10px;
-    --shadow-card: 0 6px 20px rgba(0,0,0,.08);
-    
-    /* Original shadcn variables */
-    --background: 0 0% 100%;
-    --foreground: 6 18% 9%; /* Deep Ink equivalent */
-    --card: 42 40% 97%; /* Surface equivalent */
-    --card-foreground: 6 18% 9%;
-    --popover: 42 40% 97%;
-    --popover-foreground: 6 18% 9%;
-    --primary: 8 67% 54%; /* ROBOT Red equivalent */
-    --primary-foreground: 0 0% 98%;
-    --secondary: 0 0% 96.1%;
-    --secondary-foreground: 6 18% 9%;
-    --muted: 0 0% 96.1%;
-    --muted-foreground: 0 0% 45.1%;
-    --accent: 42 40% 97%;
-    --accent-foreground: 6 18% 9%;
-    --destructive: 0 84.2% 60.2%;
-    --destructive-foreground: 0 0% 98%;
-    --border: 0 0% 89.8%;
-    --input: 0 0% 89.8%;
-    --ring: 8 67% 54%; /* ROBOT Red */
-    --radius: 12px; /* ROBOT md radius */
-    --chart-1: 12 76% 61%;
-    --chart-2: 173 58% 39%;
-    --chart-3: 197 37% 24%;
-    --chart-4: 43 74% 66%;
-    --chart-5: 27 87% 67%;
-  }
+:root {
+  /* ROBOT Design Tokens */
+  --color-primary: #CB5544;
+  --color-surface: #FFF7EA;
+  --color-ink: #062430;
 
-  .dark {
-    --background: 6 18% 9%;
-    --foreground: 0 0% 98%;
-    --card: 6 18% 12%;
-    --card-foreground: 0 0% 98%;
-    --popover: 6 18% 9%;
-    --popover-foreground: 0 0% 98%;
-    --primary: 8 67% 54%;
-    --primary-foreground: 0 0% 98%;
-    --secondary: 0 0% 14.9%;
-    --secondary-foreground: 0 0% 98%;
-    --muted: 0 0% 14.9%;
-    --muted-foreground: 0 0% 63.9%;
-    --accent: 0 0% 14.9%;
-    --accent-foreground: 0 0% 98%;
-    --destructive: 0 62.8% 30.6%;
-    --destructive-foreground: 0 0% 98%;
-    --border: 0 0% 14.9%;
-    --input: 0 0% 14.9%;
-    --ring: 8 67% 54%;
-    --chart-1: 220 70% 50%;
-    --chart-2: 160 60% 45%;
-    --chart-3: 30 80% 55%;
-    --chart-4: 280 65% 60%;
-    --chart-5: 340 75% 55%;
-  }
-}
-
-@layer base {
-  * {
-    border-color: hsl(var(--border));
-  }
-  body {
-    background-color: hsl(var(--background));
-    color: hsl(var(--foreground));
-    font-feature-settings: "rlig" 1, "calt" 1;
-  }
-}
+  /* shadcn system vars mapped to ROBOT tokens */
+  --background: #FFF7EA;          /* surface */
+  --foreground: #062430;          /* ink */
+  --primary: #CB5544;             /* ROBOT red */
+  --primary-foreground: #ffffff;
 
-/* ROBOT specific utility classes */
-.robot-primary {
-  color: var(--color-primary);
-}
-
-.robot-surface {
-  background-color: var(--color-surface);
-}
+  /* shadcn secondary colors */
+  --secondary: 240 4.8% 95.9%;
+  --secondary-foreground: 240 5.9% 10%;
+  --muted: 240 4.8% 95.9%;
+  --muted-foreground: 240 3.8% 46.1%;
+  --accent: 240 4.8% 95.9%;
+  --accent-foreground: 240 5.9% 10%;
+  --destructive: 0 84.2% 60.2%;
+  --destructive-foreground: 0 0% 98%;
+  --border: 240 5.9% 90%;
+  --input: 240 5.9% 90%;
+  --ring: 240 10% 3.9%;
+  --card: #FFF7EA;
+  --card-foreground: #062430;
+  --popover: #FFF7EA;
+  --popover-foreground: #062430;
 
-.robot-ink {
-  color: var(--color-ink);
+  /* ROBOT specific tokens */
+  --radius-lg: 16px;
+  --radius-md: 12px;
+  --radius-sm: 10px;
+  --shadow-card: 0 6px 20px rgba(0,0,0,.08);
 }
 
-.robot-card-shadow {
-  box-shadow: var(--shadow-card);
+body {
+  background: var(--background);
+  color: var(--foreground);
+  font-feature-settings: "rlig" 1, "calt" 1;
 }
diff --git a/apps/web/src/app/layout.tsx b/apps/web/src/app/layout.tsx
index b3a3e1e..b0bb548 100644
--- a/apps/web/src/app/layout.tsx
+++ b/apps/web/src/app/layout.tsx
@@ -2,7 +2,6 @@ import type { Metadata } from "next";
 import { Geist, Geist_Mono } from "next/font/google";
 import "./globals.css";
 import { QueryProvider } from "@/lib/query-client";
-import { Header } from "@/components/header";
 import { Toaster } from "@/components/toaster";
 
 const geistSans = Geist({
@@ -16,8 +15,8 @@ const geistMono = Geist_Mono({
 });
 
 export const metadata: Metadata = {
-  title: "ROBOT - Task Management",
-  description: "–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏ –∑ ROBOT",
+  title: "ROBOT Admin - –í–∞—à —Ü–∏—Ñ—Ä–æ–≤–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É",
+  description: "ROBOT ‚Äî —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ —É —Å–≤—ñ—Ç—ñ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É. –ß–µ—Ä–≤–æ–Ω–∏–π —Ä–æ–±–æ—Ç —É –∫—É—Ö–∞—Ä—Å—å–∫—ñ–π —à–∞–ø—Ü—ñ –¥–ª—è –∑—Ä—É—á–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å —Ç–∞ –ª–µ–≥–∫–æ—ó —Ä–æ–±–æ—Ç–∏.",
 };
 
 export default function RootLayout({
@@ -26,17 +25,10 @@ export default function RootLayout({
   children: React.ReactNode;
 }>) {
   return (
-    <html lang="uk">
-      <body
-        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
-      >
+    <html lang="ua">
+      <body className={`${geistSans.variable} ${geistMono.variable} antialiased bg-surface text-ink`}>
         <QueryProvider>
-          <div className="min-h-screen bg-background">
-            <Header />
-            <main className="container mx-auto px-4 py-8 max-w-7xl">
-              {children}
-            </main>
-          </div>
+          {children}
           <Toaster />
         </QueryProvider>
       </body>
diff --git a/apps/web/src/app/page.tsx b/apps/web/src/app/page.tsx
index 6c36528..7a417e4 100644
--- a/apps/web/src/app/page.tsx
+++ b/apps/web/src/app/page.tsx
@@ -1,100 +1,178 @@
 import Link from "next/link";
 import { Button } from "@/components/ui/button";
-import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card";
-import { CheckCircle, Clock, Plus, BarChart3 } from "lucide-react";
+import { Card, CardContent } from "@/components/ui/card";
+import { ChevronRight, Utensils, Zap, Shield, Users } from "lucide-react";
 
-export default function Home() {
+export default function HomePage() {
   return (
-    <div className="space-y-12">
+    <div className="min-h-screen bg-surface">
       {/* Hero Section */}
-      <section className="text-center py-12">
-        <div className="space-y-4">
-          <div className="flex justify-center mb-6">
-            <div className="w-20 h-20 bg-primary rounded-2xl flex items-center justify-center shadow-lg">
+      <section className="relative overflow-hidden bg-gradient-to-br from-surface to-primary/5">
+        <div className="container mx-auto px-6 py-20 text-center">
+          {/* ROBOT Logo & Mascot */}
+          <div className="mb-8">
+            <div className="inline-flex items-center justify-center w-24 h-24 bg-primary rounded-full shadow-card mb-6">
               <span className="text-4xl">ü§ñ</span>
+              <span className="text-2xl absolute -top-1 -right-1">üë®‚Äçüç≥</span>
             </div>
+            
+            <h1 className="text-5xl md:text-7xl font-bold text-ink mb-4">
+              ROBOT
+            </h1>
+            
+            <div className="w-24 h-1 bg-primary mx-auto rounded-full"></div>
           </div>
-          
-          <h1 className="text-4xl md:text-6xl font-bold text-foreground">
-            –í—ñ—Ç–∞—î–º–æ –≤ <span className="text-primary">ROBOT</span>
-          </h1>
-          
-          <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
-            –ï—Ñ–µ–∫—Ç–∏–≤–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏ –¥–ª—è –≤–∞—à–æ—ó –∫–æ–º–∞–Ω–¥–∏. 
-            –û—Ä–≥–∞–Ω—ñ–∑–æ–≤—É–π—Ç–µ —Ä–æ–±–æ—Ç—É, –≤—ñ–¥—Å—Ç–µ–∂—É–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å —Ç–∞ –¥–æ—Å—è–≥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤.
-          </p>
-          
-          <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mt-8">
-            <Button size="lg" asChild>
-              <Link href="/tasks">
-                <Plus className="mr-2 h-5 w-5" />
-                –ü–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É
+
+          {/* Main Description */}
+          <div className="max-w-4xl mx-auto mb-12">
+            <p className="text-xl md:text-2xl text-ink/80 leading-relaxed mb-8">
+              <strong className="text-primary">ROBOT</strong> ‚Äî —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ —É —Å–≤—ñ—Ç—ñ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É. 
+            </p>
+            
+            <p className="text-lg md:text-xl text-ink/70 leading-relaxed">
+              –¶–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–æ—Ñ—Ç, –∞ —Ü—ñ–ª–∏–π <span className="text-primary font-medium">—Ü–∏—Ñ—Ä–æ–≤–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç</span>: 
+              —á–µ—Ä–≤–æ–Ω–∏–π —Ä–æ–±–æ—Ç —É –∫—É—Ö–∞—Ä—Å—å–∫—ñ–π —à–∞–ø—Ü—ñ, —è–∫–∏–π –∑–Ω–∞—î, —è–∫ –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑—Ä—É—á–Ω–∏–º–∏, 
+              –æ–ø–ª–∞—Ç—É ‚Äî —à–≤–∏–¥–∫–æ—é, –∞ —Ä–æ–±–æ—Ç—É –ø–µ—Ä—Å–æ–Ω–∞–ª—É ‚Äî –ª–µ–≥—à–æ—é.
+            </p>
+          </div>
+
+          {/* Action Buttons */}
+          <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
+            <Button asChild size="lg" className="bg-primary text-white rounded-lg shadow-card hover:opacity-90 text-lg px-8 py-4">
+              <Link href="/login">
+                –£–≤—ñ–π—Ç–∏ –¥–æ —Å–∏—Å—Ç–µ–º–∏
+                <ChevronRight className="ml-2 h-5 w-5" />
               </Link>
             </Button>
             
-            <Button variant="outline" size="lg" asChild>
-              <Link href="/tasks">
-                <BarChart3 className="mr-2 h-5 w-5" />
-                –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è
+            <Button asChild variant="outline" size="lg" className="border-primary text-primary rounded-lg hover:bg-primary/5 text-lg px-8 py-4">
+              <Link href="/login">
+                –ü–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É
               </Link>
             </Button>
           </div>
+
+          <p className="text-sm text-ink/60 mt-6">
+            –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ Telegram ‚Ä¢ –ë–µ–∑–ø–µ—á–Ω–æ —Ç–∞ —à–≤–∏–¥–∫–æ
+          </p>
         </div>
+
+        {/* Decorative Elements */}
+        <div className="absolute top-20 left-10 w-20 h-20 bg-primary/10 rounded-full blur-3xl"></div>
+        <div className="absolute bottom-20 right-10 w-32 h-32 bg-primary/5 rounded-full blur-3xl"></div>
       </section>
 
       {/* Features Section */}
-      <section className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
-        <Card>
-          <CardHeader>
-            <div className="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4">
-              <Plus className="h-6 w-6 text-primary" />
-            </div>
-            <CardTitle>–°—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è</CardTitle>
-            <CardDescription>
-              –õ–µ–≥–∫–æ –¥–æ–¥–∞–≤–∞–π—Ç–µ –Ω–æ–≤—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –∑ –æ–ø–∏—Å–æ–º —Ç–∞ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏
-            </CardDescription>
-          </CardHeader>
-        </Card>
+      <section className="py-20 bg-white/50">
+        <div className="container mx-auto px-6">
+          <div className="text-center mb-16">
+            <h2 className="text-3xl md:text-4xl font-bold text-ink mb-4">
+              –ß–æ–º—É ROBOT?
+            </h2>
+            <p className="text-lg text-ink/70 max-w-2xl mx-auto">
+              –ê–≤—Ç–æ–º–∞—Ç–∏–∑—É–π—Ç–µ —Å–≤—ñ–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∑ —Ä–æ–∑—É–º–Ω–∏–º –∞—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
+            </p>
+          </div>
 
-        <Card>
-          <CardHeader>
-            <div className="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4">
-              <Clock className="h-6 w-6 text-primary" />
+          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8 max-w-6xl mx-auto">
+            <Card className="text-center p-6 border-0 shadow-card bg-white rounded-lg hover:shadow-lg transition-shadow">
+              <CardContent className="pt-6">
+                <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4">
+                  <Utensils className="h-8 w-8 text-primary" />
+                </div>
+                <h3 className="font-semibold text-ink mb-2">–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–µ–Ω—é</h3>
+                <p className="text-sm text-ink/70">
+                  –õ–µ–≥–∫–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—Ç—Ä–∞–≤, –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–∞ —Ü—ñ–Ω —É –∫—ñ–ª—å–∫–∞ –∫–ª—ñ–∫—ñ–≤
+                </p>
+              </CardContent>
+            </Card>
+
+            <Card className="text-center p-6 border-0 shadow-card bg-white rounded-lg hover:shadow-lg transition-shadow">
+              <CardContent className="pt-6">
+                <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4">
+                  <Zap className="h-8 w-8 text-primary" />
+                </div>
+                <h3 className="font-semibold text-ink mb-2">–®–≤–∏–¥–∫—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h3>
+                <p className="text-sm text-ink/70">
+                  –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è –ø—Ä–æ—Ü–µ—Å—É –ø—Ä–∏–π–æ–º—É —Ç–∞ –æ–±—Ä–æ–±–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å
+                </p>
+              </CardContent>
+            </Card>
+
+            <Card className="text-center p-6 border-0 shadow-card bg-white rounded-lg hover:shadow-lg transition-shadow">
+              <CardContent className="pt-6">
+                <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4">
+                  <Shield className="h-8 w-8 text-primary" />
+                </div>
+                <h3 className="font-semibold text-ink mb-2">–ë–µ–∑–ø–µ—á–Ω–∞ –æ–ø–ª–∞—Ç–∞</h3>
+                <p className="text-sm text-ink/70">
+                  –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ —Å—É—á–∞—Å–Ω–∏–º–∏ –ø–ª–∞—Ç—ñ–∂–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
+                </p>
+              </CardContent>
+            </Card>
+
+            <Card className="text-center p-6 border-0 shadow-card bg-white rounded-lg hover:shadow-lg transition-shadow">
+              <CardContent className="pt-6">
+                <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4">
+                  <Users className="h-8 w-8 text-primary" />
+                </div>
+                <h3 className="font-semibold text-ink mb-2">–õ–µ–≥–∫–∞ —Ä–æ–±–æ—Ç–∞</h3>
+                <p className="text-sm text-ink/70">
+                  –Ü–Ω—Ç—É—ó—Ç–∏–≤–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–ª—É
+                </p>
+              </CardContent>
+            </Card>
+          </div>
+        </div>
+      </section>
+
+      {/* CTA Section */}
+      <section className="py-20 bg-primary/5">
+        <div className="container mx-auto px-6 text-center">
+          <div className="max-w-3xl mx-auto">
+            <h2 className="text-3xl md:text-4xl font-bold text-ink mb-6">
+              –ì–æ—Ç–æ–≤—ñ —Ä–æ–∑–ø–æ—á–∞—Ç–∏?
+            </h2>
+            <p className="text-lg text-ink/70 mb-8">
+              –ü—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å –¥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ñ–≤, —è–∫—ñ –≤–∂–µ –¥–æ–≤—ñ—Ä—è—é—Ç—å ROBOT
+            </p>
+            
+            <div className="flex flex-col sm:flex-row gap-4 justify-center">
+              <Button asChild size="lg" className="bg-primary text-white rounded-lg shadow-card hover:opacity-90 text-lg px-8 py-4">
+                <Link href="/login">
+                  –£–≤—ñ–π—Ç–∏ –≤ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å
+                  <ChevronRight className="ml-2 h-5 w-5" />
+                </Link>
+              </Button>
             </div>
-            <CardTitle>–í—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å</CardTitle>
-            <CardDescription>
-              –ú–æ–Ω—ñ—Ç–æ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞–≤–¥–∞–Ω—å –≤—ñ–¥ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
-            </CardDescription>
-          </CardHeader>
-        </Card>
 
-        <Card>
-          <CardHeader>
-            <div className="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4">
-              <CheckCircle className="h-6 w-6 text-primary" />
+            <div className="mt-12 p-6 bg-white rounded-lg shadow-card border border-primary/20">
+              <div className="flex items-center justify-center mb-4">
+                <span className="text-3xl mr-3">ü§ñ</span>
+                <span className="text-2xl">üë®‚Äçüç≥</span>
+              </div>
+              <p className="text-ink/70">
+                <strong className="text-primary">–ß–µ—Ä–≤–æ–Ω–∏–π —Ä–æ–±–æ—Ç —É –∫—É—Ö–∞—Ä—Å—å–∫—ñ–π —à–∞–ø—Ü—ñ</strong> –≤–∂–µ —á–µ–∫–∞—î –Ω–∞ –≤–∞—Å!
+              </p>
             </div>
-            <CardTitle>–î–æ—Å—è–≥–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤</CardTitle>
-            <CardDescription>
-              –ó–∞–≤–µ—Ä—à—É–π—Ç–µ –ø—Ä–æ—î–∫—Ç–∏ –≤ —Å—Ç—Ä–æ–∫ —Ç–∞ –∞–Ω–∞–ª—ñ–∑—É–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
-            </CardDescription>
-          </CardHeader>
-        </Card>
+          </div>
+        </div>
       </section>
 
-      {/* Quick Stats */}
-      <section className="bg-muted/50 rounded-2xl p-8">
-        <div className="text-center space-y-4">
-          <h2 className="text-2xl font-bold">–ì–æ—Ç–æ–≤—ñ —Ä–æ–∑–ø–æ—á–∞—Ç–∏?</h2>
-          <p className="text-muted-foreground">
-            –ü—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—è –¥–æ —Ç–∏—Å—è—á –∫–æ–º–∞–Ω–¥, —è–∫—ñ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å ROBOT –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏
+      {/* Footer */}
+      <footer className="py-8 bg-white border-t border-primary/10">
+        <div className="container mx-auto px-6 text-center">
+          <div className="flex items-center justify-center mb-4">
+            <div className="w-8 h-8 bg-primary rounded-full flex items-center justify-center mr-2">
+              <span className="text-white text-sm">ü§ñ</span>
+            </div>
+            <span className="font-bold text-primary">ROBOT</span>
+          </div>
+          <p className="text-sm text-ink/60">
+            ¬© 2024 ROBOT. –í–∞—à —Ü–∏—Ñ—Ä–æ–≤–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É.
           </p>
-          <Button asChild size="lg">
-            <Link href="/tasks">
-              –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è
-            </Link>
-          </Button>
         </div>
-      </section>
+      </footer>
     </div>
   );
 }
diff --git a/apps/web/src/app/tasks/[id]/page.tsx b/apps/web/src/app/tasks/[id]/page.tsx
deleted file mode 100644
index 6f1e8ed..0000000
--- a/apps/web/src/app/tasks/[id]/page.tsx
+++ /dev/null
@@ -1,31 +0,0 @@
-import Link from 'next/link';
-import { Button } from '@/components/ui/button';
-import { TaskDetailClient } from './task-detail-client';
-import { ArrowLeft } from 'lucide-react';
-
-interface TaskDetailPageProps {
-  params: Promise<{ id: string }>;
-}
-
-export default async function TaskDetailPage({ params }: TaskDetailPageProps) {
-  const { id } = await params;
-
-  return (
-    <div className="container mx-auto py-8 max-w-4xl">
-      <div className="space-y-6">
-        {/* Header */}
-        <div className="flex items-center space-x-4">
-          <Button variant="outline" size="sm" asChild>
-            <Link href="/tasks">
-              <ArrowLeft className="w-4 h-4 mr-2" />
-              –ù–∞–∑–∞–¥ –¥–æ —Å–ø–∏—Å–∫—É
-            </Link>
-          </Button>
-        </div>
-
-        {/* Task Detail Content */}
-        <TaskDetailClient taskId={id} />
-      </div>
-    </div>
-  );
-}
\ No newline at end of file
diff --git a/apps/web/src/app/tasks/[id]/task-detail-client.tsx b/apps/web/src/app/tasks/[id]/task-detail-client.tsx
deleted file mode 100644
index 6afa2b3..0000000
--- a/apps/web/src/app/tasks/[id]/task-detail-client.tsx
+++ /dev/null
@@ -1,178 +0,0 @@
-'use client';
-
-import { useState } from 'react';
-import { Button } from '@/components/ui/button';
-import { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';
-import { StatusBadge } from '@/components/status-badge';
-import { TaskForm } from '@/components/task-form';
-import { ConfirmDialog } from '@/components/confirm-dialog';
-import { useTask, useDeleteTask } from '@/lib/queries';
-import { useToast } from '@/hooks/use-toast';
-import { formatDate } from '@/lib/utils';
-import { Edit, Trash2, Loader2 } from 'lucide-react';
-import { useRouter } from 'next/navigation';
-
-interface TaskDetailClientProps {
-  taskId: string;
-}
-
-export function TaskDetailClient({ taskId }: TaskDetailClientProps) {
-  const router = useRouter();
-  const { toast } = useToast();
-  const [showEditForm, setShowEditForm] = useState(false);
-  const [showDeleteDialog, setShowDeleteDialog] = useState(false);
-
-  const { data: task, isLoading, error } = useTask(taskId);
-
-  const deleteTask = useDeleteTask({
-    onSuccess: () => {
-      toast({
-        title: '–£—Å–ø—ñ—Ö!',
-        description: '–ó–∞–≤–¥–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ',
-        variant: 'success',
-      });
-      router.push('/tasks');
-    },
-    onError: (error) => {
-      toast({
-        title: '–ü–æ–º–∏–ª–∫–∞',
-        description: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è',
-        variant: 'destructive',
-      });
-    },
-  });
-
-  const handleDelete = () => {
-    if (task) {
-      deleteTask.mutate(task.id);
-    }
-  };
-
-  if (isLoading) {
-    return (
-      <div className="flex justify-center py-8">
-        <div className="text-center">
-          <Loader2 className="w-8 h-8 animate-spin mx-auto" />
-          <p className="mt-2 text-muted-foreground">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è...</p>
-        </div>
-      </div>
-    );
-  }
-
-  if (error) {
-    return (
-      <Card>
-        <CardContent className="pt-6">
-          <div className="text-center">
-            <p className="text-destructive mb-4">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: {error.message}</p>
-            <Button 
-              variant="outline" 
-              onClick={() => window.location.reload()}
-            >
-              –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
-            </Button>
-          </div>
-        </CardContent>
-      </Card>
-    );
-  }
-
-  if (!task) {
-    return (
-      <Card>
-        <CardContent className="pt-6">
-          <div className="text-center">
-            <p className="text-muted-foreground">–ó–∞–≤–¥–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>
-          </div>
-        </CardContent>
-      </Card>
-    );
-  }
-
-  return (
-    <>
-      <Card>
-        <CardHeader>
-          <div className="flex justify-between items-start">
-            <div className="space-y-2">
-              <CardTitle className="text-2xl">{task.title}</CardTitle>
-              <div className="flex items-center space-x-4">
-                <StatusBadge status={task.status} />
-              </div>
-            </div>
-            <div className="flex space-x-2">
-              <Button 
-                variant="outline" 
-                size="sm"
-                onClick={() => setShowEditForm(true)}
-              >
-                <Edit className="w-4 h-4 mr-2" />
-                –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
-              </Button>
-              <Button 
-                variant="outline" 
-                size="sm"
-                onClick={() => setShowDeleteDialog(true)}
-              >
-                <Trash2 className="w-4 h-4 mr-2 text-destructive" />
-                –í–∏–¥–∞–ª–∏—Ç–∏
-              </Button>
-            </div>
-          </div>
-        </CardHeader>
-
-        <CardContent className="space-y-6">
-          {/* Description */}
-          {task.description ? (
-            <div>
-              <h3 className="font-semibold mb-2">–û–ø–∏—Å</h3>
-              <p className="text-muted-foreground whitespace-pre-wrap">{task.description}</p>
-            </div>
-          ) : (
-            <div>
-              <h3 className="font-semibold mb-2">–û–ø–∏—Å</h3>
-              <p className="text-muted-foreground italic">–û–ø–∏—Å –Ω–µ –≤–∫–∞–∑–∞–Ω–æ</p>
-            </div>
-          )}
-
-          {/* Metadata */}
-          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 pt-4 border-t">
-            <div>
-              <h4 className="font-medium text-sm text-muted-foreground mb-1">–°—Ç–≤–æ—Ä–µ–Ω–æ</h4>
-              <p className="text-sm">{formatDate(task.createdAt)}</p>
-            </div>
-            <div>
-              <h4 className="font-medium text-sm text-muted-foreground mb-1">–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è</h4>
-              <p className="text-sm">{formatDate(task.updatedAt)}</p>
-            </div>
-          </div>
-
-          {/* Task ID for reference */}
-          <div className="pt-4 border-t">
-            <h4 className="font-medium text-sm text-muted-foreground mb-1">ID –∑–∞–≤–¥–∞–Ω–Ω—è</h4>
-            <p className="text-sm font-mono">{task.id}</p>
-          </div>
-        </CardContent>
-      </Card>
-
-      {/* Modals */}
-      <TaskForm
-        open={showEditForm}
-        onOpenChange={setShowEditForm}
-        task={task}
-        mode="edit"
-      />
-
-      <ConfirmDialog
-        open={showDeleteDialog}
-        onOpenChange={setShowDeleteDialog}
-        title="–í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è"
-        description={`–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è "${task.title}"? –¶—é –¥—ñ—é –Ω–µ–º–æ–∂–ª–∏–≤–æ —Å–∫–∞—Å—É–≤–∞—Ç–∏.`}
-        confirmLabel="–í–∏–¥–∞–ª–∏—Ç–∏"
-        variant="destructive"
-        onConfirm={handleDelete}
-        loading={deleteTask.isPending}
-      />
-    </>
-  );
-}
\ No newline at end of file
diff --git a/apps/web/src/app/tasks/page.tsx b/apps/web/src/app/tasks/page.tsx
deleted file mode 100644
index d69f6bd..0000000
--- a/apps/web/src/app/tasks/page.tsx
+++ /dev/null
@@ -1,16 +0,0 @@
-import { DataTable } from '@/components/data-table';
-
-interface TasksPageProps {
-  searchParams: Promise<{ [key: string]: string | string[] | undefined }>;
-}
-
-export default async function TasksPage({ searchParams }: TasksPageProps) {
-  const params = await searchParams;
-  const search = typeof params.search === 'string' ? params.search : '';
-
-  return (
-    <div className="container mx-auto py-8">
-      <DataTable initialSearch={search} />
-    </div>
-  );
-}
\ No newline at end of file
diff --git a/apps/web/src/components/confirm-dialog.tsx b/apps/web/src/components/confirm-dialog.tsx
deleted file mode 100644
index c0e3f18..0000000
--- a/apps/web/src/components/confirm-dialog.tsx
+++ /dev/null
@@ -1,69 +0,0 @@
-'use client';
-
-import {
-  Dialog,
-  DialogContent,
-  DialogHeader,
-  DialogTitle,
-  DialogDescription,
-  DialogFooter,
-} from '@/components/ui/dialog';
-import { Button } from '@/components/ui/button';
-
-interface ConfirmDialogProps {
-  open: boolean;
-  onOpenChange: (open: boolean) => void;
-  title: string;
-  description: string;
-  confirmLabel?: string;
-  cancelLabel?: string;
-  onConfirm: () => void;
-  loading?: boolean;
-  variant?: 'default' | 'destructive';
-}
-
-export function ConfirmDialog({
-  open,
-  onOpenChange,
-  title,
-  description,
-  confirmLabel = '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏',
-  cancelLabel = '–°–∫–∞—Å—É–≤–∞—Ç–∏',
-  onConfirm,
-  loading = false,
-  variant = 'default',
-}: ConfirmDialogProps) {
-  const handleConfirm = () => {
-    onConfirm();
-  };
-
-  return (
-    <Dialog open={open} onOpenChange={onOpenChange}>
-      <DialogContent className="sm:max-w-[425px]">
-        <DialogHeader>
-          <DialogTitle>{title}</DialogTitle>
-          <DialogDescription>{description}</DialogDescription>
-        </DialogHeader>
-
-        <DialogFooter>
-          <Button
-            type="button"
-            variant="outline"
-            onClick={() => onOpenChange(false)}
-            disabled={loading}
-          >
-            {cancelLabel}
-          </Button>
-          <Button
-            type="button"
-            variant={variant}
-            onClick={handleConfirm}
-            disabled={loading}
-          >
-            {loading ? '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...' : confirmLabel}
-          </Button>
-        </DialogFooter>
-      </DialogContent>
-    </Dialog>
-  );
-}
\ No newline at end of file
diff --git a/apps/web/src/components/data-table.tsx b/apps/web/src/components/data-table.tsx
deleted file mode 100644
index cc0022e..0000000
--- a/apps/web/src/components/data-table.tsx
+++ /dev/null
@@ -1,284 +0,0 @@
-'use client';
-
-import { useState } from 'react';
-import { 
-  Table, 
-  TableBody, 
-  TableCell, 
-  TableHead, 
-  TableHeader, 
-  TableRow 
-} from '@/components/ui/table';
-import { Button } from '@/components/ui/button';
-import { Input } from '@/components/ui/input';
-import { StatusBadge } from '@/components/status-badge';
-import { TaskForm } from '@/components/task-form';
-import { ConfirmDialog } from '@/components/confirm-dialog';
-import { useTasks, useDeleteTask } from '@/lib/queries';
-import { useToast } from '@/hooks/use-toast';
-import { formatRelativeTime } from '@/lib/utils';
-import { Task } from '@/types/task';
-import { 
-  Plus, 
-  Search, 
-  Eye, 
-  Edit, 
-  Trash2, 
-  ChevronLeft, 
-  ChevronRight,
-  Loader2
-} from 'lucide-react';
-import Link from 'next/link';
-
-interface DataTableProps {
-  initialSearch?: string;
-}
-
-export function DataTable({ initialSearch = '' }: DataTableProps) {
-  const { toast } = useToast();
-  const [search, setSearch] = useState(initialSearch);
-  const [page, setPage] = useState(1);
-  const [limit] = useState(10);
-  
-  // Modal states
-  const [showCreateForm, setShowCreateForm] = useState(false);
-  const [editingTask, setEditingTask] = useState<Task | null>(null);
-  const [deletingTask, setDeletingTask] = useState<Task | null>(null);
-
-  // Data fetching
-  const { 
-    data, 
-    isLoading, 
-    error 
-  } = useTasks({ 
-    search: search || undefined, 
-    page, 
-    limit 
-  });
-
-  // Delete mutation
-  const deleteTask = useDeleteTask({
-    onSuccess: () => {
-      toast({
-        title: '–£—Å–ø—ñ—Ö!',
-        description: '–ó–∞–≤–¥–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ',
-        variant: 'success',
-      });
-      setDeletingTask(null);
-    },
-    onError: (error) => {
-      toast({
-        title: '–ü–æ–º–∏–ª–∫–∞',
-        description: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è',
-        variant: 'destructive',
-      });
-    },
-  });
-
-  const handleDelete = () => {
-    if (deletingTask) {
-      deleteTask.mutate(deletingTask.id);
-    }
-  };
-
-  const totalPages = data ? Math.ceil(data.total / limit) : 0;
-  const canPrevious = page > 1;
-  const canNext = page < totalPages;
-
-  if (error) {
-    return (
-      <div className="text-center py-8">
-        <p className="text-destructive">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: {error.message}</p>
-        <Button 
-          variant="outline" 
-          onClick={() => window.location.reload()} 
-          className="mt-4"
-        >
-          –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
-        </Button>
-      </div>
-    );
-  }
-
-  return (
-    <div className="space-y-4">
-      {/* Header */}
-      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
-        <div>
-          <h1 className="text-2xl font-bold">–ó–∞–≤–¥–∞–Ω–Ω—è</h1>
-          <p className="text-muted-foreground">
-            –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≤–∞—à–∏–º–∏ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏
-            {data && ` (${data.total} –≤—Å—å–æ–≥–æ)`}
-          </p>
-        </div>
-        
-        <Button onClick={() => setShowCreateForm(true)}>
-          <Plus className="w-4 h-4 mr-2" />
-          –°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è
-        </Button>
-      </div>
-
-      {/* Search */}
-      <div className="flex items-center space-x-2">
-        <div className="relative flex-1 max-w-sm">
-          <Search className="absolute left-2 top-2.5 h-4 w-4 text-muted-foreground" />
-          <Input
-            placeholder="–ü–æ—à—É–∫ –∑–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º..."
-            value={search}
-            onChange={(e) => {
-              setSearch(e.target.value);
-              setPage(1); // Reset to first page when searching
-            }}
-            className="pl-8"
-          />
-        </div>
-      </div>
-
-      {/* Table */}
-      <div className="border rounded-lg">
-        <Table>
-          <TableHeader>
-            <TableRow>
-              <TableHead>–ó–∞–≥–æ–ª–æ–≤–æ–∫</TableHead>
-              <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
-              <TableHead>–û–Ω–æ–≤–ª–µ–Ω–æ</TableHead>
-              <TableHead className="text-right">–î—ñ—ó</TableHead>
-            </TableRow>
-          </TableHeader>
-          <TableBody>
-            {isLoading ? (
-              <TableRow>
-                <TableCell colSpan={4} className="text-center py-8">
-                  <Loader2 className="w-6 h-6 animate-spin mx-auto" />
-                  <p className="mt-2 text-muted-foreground">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å...</p>
-                </TableCell>
-              </TableRow>
-            ) : data?.items.length === 0 ? (
-              <TableRow>
-                <TableCell colSpan={4} className="text-center py-8">
-                  <p className="text-muted-foreground">
-                    {search ? '–ó–∞–≤–¥–∞–Ω—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' : '–ù–µ–º–∞—î –∑–∞–≤–¥–∞–Ω—å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è'}
-                  </p>
-                  {!search && (
-                    <Button 
-                      variant="outline" 
-                      onClick={() => setShowCreateForm(true)}
-                      className="mt-2"
-                    >
-                      <Plus className="w-4 h-4 mr-2" />
-                      –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–µ—Ä—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è
-                    </Button>
-                  )}
-                </TableCell>
-              </TableRow>
-            ) : (
-              data?.items.map((task) => (
-                <TableRow key={task.id}>
-                  <TableCell className="font-medium">
-                    <div>
-                      <div className="font-semibold">{task.title}</div>
-                      {task.description && (
-                        <div className="text-sm text-muted-foreground line-clamp-2">
-                          {task.description}
-                        </div>
-                      )}
-                    </div>
-                  </TableCell>
-                  <TableCell>
-                    <StatusBadge status={task.status} />
-                  </TableCell>
-                  <TableCell className="text-muted-foreground">
-                    {formatRelativeTime(task.updatedAt)}
-                  </TableCell>
-                  <TableCell className="text-right">
-                    <div className="flex justify-end space-x-2">
-                      <Button variant="ghost" size="sm" asChild>
-                        <Link href={`/tasks/${task.id}`}>
-                          <Eye className="w-4 h-4" />
-                        </Link>
-                      </Button>
-                      <Button 
-                        variant="ghost" 
-                        size="sm"
-                        onClick={() => setEditingTask(task)}
-                      >
-                        <Edit className="w-4 h-4" />
-                      </Button>
-                      <Button 
-                        variant="ghost" 
-                        size="sm"
-                        onClick={() => setDeletingTask(task)}
-                      >
-                        <Trash2 className="w-4 h-4 text-destructive" />
-                      </Button>
-                    </div>
-                  </TableCell>
-                </TableRow>
-              ))
-            )}
-          </TableBody>
-        </Table>
-      </div>
-
-      {/* Pagination */}
-      {data && data.total > 0 && (
-        <div className="flex items-center justify-between">
-          <p className="text-sm text-muted-foreground">
-            –ü–æ–∫–∞–∑–∞–Ω–æ {((page - 1) * limit) + 1} - {Math.min(page * limit, data.total)} –∑ {data.total} –∑–∞–≤–¥–∞–Ω—å
-          </p>
-          
-          <div className="flex items-center space-x-2">
-            <Button
-              variant="outline"
-              size="sm"
-              onClick={() => setPage(page - 1)}
-              disabled={!canPrevious}
-            >
-              <ChevronLeft className="w-4 h-4" />
-              –ü–æ–ø–µ—Ä–µ–¥–Ω—è
-            </Button>
-            
-            <span className="text-sm">
-              –°—Ç–æ—Ä—ñ–Ω–∫–∞ {page} –∑ {totalPages}
-            </span>
-            
-            <Button
-              variant="outline"
-              size="sm"
-              onClick={() => setPage(page + 1)}
-              disabled={!canNext}
-            >
-              –ù–∞—Å—Ç—É–ø–Ω–∞
-              <ChevronRight className="w-4 h-4" />
-            </Button>
-          </div>
-        </div>
-      )}
-
-      {/* Modals */}
-      <TaskForm
-        open={showCreateForm}
-        onOpenChange={setShowCreateForm}
-        mode="create"
-      />
-
-      <TaskForm
-        open={!!editingTask}
-        onOpenChange={(open) => !open && setEditingTask(null)}
-        task={editingTask || undefined}
-        mode="edit"
-      />
-
-      <ConfirmDialog
-        open={!!deletingTask}
-        onOpenChange={(open) => !open && setDeletingTask(null)}
-        title="–í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è"
-        description={`–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è "${deletingTask?.title}"? –¶—é –¥—ñ—é –Ω–µ–º–æ–∂–ª–∏–≤–æ —Å–∫–∞—Å—É–≤–∞—Ç–∏.`}
-        confirmLabel="–í–∏–¥–∞–ª–∏—Ç–∏"
-        variant="destructive"
-        onConfirm={handleDelete}
-        loading={deleteTask.isPending}
-      />
-    </div>
-  );
-}
\ No newline at end of file
diff --git a/apps/web/src/components/header.tsx b/apps/web/src/components/header.tsx
deleted file mode 100644
index bb19830..0000000
--- a/apps/web/src/components/header.tsx
+++ /dev/null
@@ -1,44 +0,0 @@
-import Link from "next/link";
-import { Button } from "@/components/ui/button";
-
-export function Header() {
-  return (
-    <header className="border-b border-border bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
-      <div className="container mx-auto px-4 py-4 max-w-7xl">
-        <div className="flex items-center justify-between">
-          <div className="flex items-center space-x-4">
-            <Link href="/" className="flex items-center space-x-2">
-              <div className="w-8 h-8 bg-primary rounded-lg flex items-center justify-center">
-                <span className="text-primary-foreground font-bold text-lg">ü§ñ</span>
-              </div>
-              <span className="font-bold text-xl text-primary">ROBOT</span>
-            </Link>
-            
-            <nav className="hidden md:flex items-center space-x-6 text-sm">
-              <Link 
-                href="/" 
-                className="text-foreground/60 hover:text-foreground transition-colors"
-              >
-                –ì–æ–ª–æ–≤–Ω–∞
-              </Link>
-              <Link 
-                href="/tasks" 
-                className="text-foreground/60 hover:text-foreground transition-colors"
-              >
-                –ó–∞–≤–¥–∞–Ω–Ω—è
-              </Link>
-            </nav>
-          </div>
-          
-          <div className="flex items-center space-x-2">
-            <Button variant="outline" size="sm" asChild>
-              <Link href="/tasks">
-                –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è
-              </Link>
-            </Button>
-          </div>
-        </div>
-      </div>
-    </header>
-  );
-}
\ No newline at end of file
diff --git a/apps/web/src/components/items-table.tsx b/apps/web/src/components/items-table.tsx
index f70de89..2b86f26 100644
--- a/apps/web/src/components/items-table.tsx
+++ b/apps/web/src/components/items-table.tsx
@@ -93,11 +93,11 @@ export function ItemsTable({ items, loading = false, onRefetch }: ItemsTableProp
 
   if (loading) {
     return (
-      <Card>
+      <Card className="shadow-card">
         <CardContent className="pt-6">
           <div className="flex items-center justify-center py-8">
             <div className="text-center">
-              <Loader2 className="h-8 w-8 animate-spin text-robot-primary mx-auto mb-4" />
+              <Loader2 className="h-8 w-8 animate-spin text-primary mx-auto mb-4" />
               <p className="text-muted-foreground">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç—Ä–∞–≤...</p>
             </div>
           </div>
@@ -107,7 +107,7 @@ export function ItemsTable({ items, loading = false, onRefetch }: ItemsTableProp
   }
 
   return (
-    <Card className="robot-card-shadow">
+    <Card className="shadow-card">
       <CardHeader>
         <div className="flex items-center justify-between">
           <CardTitle>–°—Ç—Ä–∞–≤–∏ —É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</CardTitle>
@@ -146,7 +146,7 @@ export function ItemsTable({ items, loading = false, onRefetch }: ItemsTableProp
                 <p className="text-muted-foreground mb-4">
                   –ü–æ—á–Ω—ñ—Ç—å –∑ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–µ—Ä—à–æ—ó —Å—Ç—Ä–∞–≤–∏ –¥–æ –º–µ–Ω—é
                 </p>
-                <Button asChild>
+                <Button asChild className="bg-primary text-white rounded-lg shadow-card hover:opacity-90">
                   <Link href="/menu/item/new">
                     <Plus className="h-4 w-4 mr-2" />
                     –î–æ–¥–∞—Ç–∏ —Å—Ç—Ä–∞–≤—É
@@ -173,7 +173,7 @@ export function ItemsTable({ items, loading = false, onRefetch }: ItemsTableProp
                   <TableRow key={item.id} className="group">
                     {/* Photo */}
                     <TableCell>
-                      <div className="w-10 h-10 rounded-robot-sm overflow-hidden bg-muted flex items-center justify-center">
+                      <div className="w-10 h-10 rounded-md overflow-hidden bg-muted flex items-center justify-center">
                         {item.photo ? (
                           <img
                             src={item.photo.url}
diff --git a/apps/web/src/components/status-badge.tsx b/apps/web/src/components/status-badge.tsx
deleted file mode 100644
index 683d3f8..0000000
--- a/apps/web/src/components/status-badge.tsx
+++ /dev/null
@@ -1,36 +0,0 @@
-import { Badge } from "@/components/ui/badge";
-import { Task } from "@/types/task";
-
-interface StatusBadgeProps {
-  status: Task['status'];
-  className?: string;
-}
-
-const statusConfig = {
-  new: {
-    variant: 'info' as const,
-    label: '–ù–æ–≤–µ',
-  },
-  in_progress: {
-    variant: 'warning' as const,
-    label: '–í —Ä–æ–±–æ—Ç—ñ',
-  },
-  done: {
-    variant: 'success' as const,
-    label: '–í–∏–∫–æ–Ω–∞–Ω–æ',
-  },
-  failed: {
-    variant: 'destructive' as const,
-    label: '–ü–æ–º–∏–ª–∫–∞',
-  },
-};
-
-export function StatusBadge({ status, className }: StatusBadgeProps) {
-  const config = statusConfig[status];
-  
-  return (
-    <Badge variant={config.variant} className={className}>
-      {config.label}
-    </Badge>
-  );
-}
\ No newline at end of file
diff --git a/apps/web/src/components/status-select.tsx b/apps/web/src/components/status-select.tsx
deleted file mode 100644
index 69e3b61..0000000
--- a/apps/web/src/components/status-select.tsx
+++ /dev/null
@@ -1,40 +0,0 @@
-'use client';
-
-import { Task } from '@/types/task';
-import { Badge } from '@/components/ui/badge';
-
-interface StatusSelectProps {
-  status: Task['status'];
-  onChange?: (status: Task['status']) => void;
-  disabled?: boolean;
-}
-
-const statusOptions = [
-  { value: 'new', label: '–ù–æ–≤–µ', variant: 'info' as const },
-  { value: 'in_progress', label: '–í —Ä–æ–±–æ—Ç—ñ', variant: 'warning' as const },
-  { value: 'done', label: '–í–∏–∫–æ–Ω–∞–Ω–æ', variant: 'success' as const },
-  { value: 'failed', label: '–ü–æ–º–∏–ª–∫–∞', variant: 'destructive' as const },
-] as const;
-
-export function StatusSelect({ status, onChange, disabled = false }: StatusSelectProps) {
-  const currentStatus = statusOptions.find(option => option.value === status);
-
-  if (!onChange || disabled) {
-    return <Badge variant={currentStatus?.variant}>{currentStatus?.label}</Badge>;
-  }
-
-  return (
-    <select 
-      value={status} 
-      onChange={(e) => onChange(e.target.value as Task['status'])}
-      className="text-sm border rounded px-2 py-1"
-      disabled={disabled}
-    >
-      {statusOptions.map(option => (
-        <option key={option.value} value={option.value}>
-          {option.label}
-        </option>
-      ))}
-    </select>
-  );
-}
\ No newline at end of file
diff --git a/apps/web/src/components/task-form.tsx b/apps/web/src/components/task-form.tsx
deleted file mode 100644
index a974ab1..0000000
--- a/apps/web/src/components/task-form.tsx
+++ /dev/null
@@ -1,163 +0,0 @@
-'use client';
-
-import { useForm } from 'react-hook-form';
-import { zodResolver } from '@hookform/resolvers/zod';
-import {
-  Dialog,
-  DialogContent,
-  DialogHeader,
-  DialogTitle,
-  DialogFooter,
-} from '@/components/ui/dialog';
-import { Button } from '@/components/ui/button';
-import { Input } from '@/components/ui/input';
-import { Textarea } from '@/components/ui/textarea';
-import { Label } from '@/components/ui/label';
-import { useCreateTask, useUpdateTask } from '@/lib/queries';
-import { createTaskSchema, updateTaskSchema, CreateTaskFormData, UpdateTaskFormData } from '@/lib/validations';
-import { useToast } from '@/hooks/use-toast';
-import { Task } from '@/types/task';
-
-interface TaskFormProps {
-  open: boolean;
-  onOpenChange: (open: boolean) => void;
-  task?: Task; // If provided, this is edit mode
-  mode?: 'create' | 'edit';
-}
-
-export function TaskForm({ open, onOpenChange, task, mode = 'create' }: TaskFormProps) {
-  const { toast } = useToast();
-  const isEdit = mode === 'edit' && task;
-
-  const {
-    register,
-    handleSubmit,
-    reset,
-    formState: { errors, isSubmitting },
-  } = useForm<CreateTaskFormData | UpdateTaskFormData>({
-    resolver: zodResolver(isEdit ? updateTaskSchema : createTaskSchema),
-    defaultValues: isEdit
-      ? {
-          title: task.title,
-          description: task.description || '',
-        }
-      : {
-          title: '',
-          description: '',
-        },
-  });
-
-  const createTask = useCreateTask({
-    onSuccess: () => {
-      toast({
-        title: '–£—Å–ø—ñ—Ö!',
-        description: '–ó–∞–≤–¥–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ',
-        variant: 'success',
-      });
-      reset();
-      onOpenChange(false);
-    },
-    onError: (error) => {
-      toast({
-        title: '–ü–æ–º–∏–ª–∫–∞',
-        description: `–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è`,
-        variant: 'destructive',
-      });
-    },
-  });
-
-  const updateTask = useUpdateTask({
-    onSuccess: () => {
-      toast({
-        title: '–£—Å–ø—ñ—Ö!',
-        description: '–ó–∞–≤–¥–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ',
-        variant: 'success',
-      });
-      onOpenChange(false);
-    },
-    onError: (error) => {
-      toast({
-        title: '–ü–æ–º–∏–ª–∫–∞',
-        description: error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è',
-        variant: 'destructive',
-      });
-    },
-  });
-
-  const onSubmit = (data: CreateTaskFormData | UpdateTaskFormData) => {
-    if (isEdit && task) {
-      updateTask.mutate({
-        id: task.id,
-        input: data as UpdateTaskFormData,
-      });
-    } else {
-      createTask.mutate(data as CreateTaskFormData);
-    }
-  };
-
-  const handleClose = () => {
-    reset();
-    onOpenChange(false);
-  };
-
-  return (
-    <Dialog open={open} onOpenChange={handleClose}>
-      <DialogContent className="sm:max-w-[425px]">
-        <DialogHeader>
-          <DialogTitle>
-            {isEdit ? '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è' : '–°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è'}
-          </DialogTitle>
-        </DialogHeader>
-
-        <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
-          <div className="space-y-2">
-            <Label htmlFor="title">–ó–∞–≥–æ–ª–æ–≤–æ–∫</Label>
-            <Input
-              id="title"
-              {...register('title')}
-              placeholder="–í–≤–µ–¥—ñ—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–≤–¥–∞–Ω–Ω—è"
-              disabled={isSubmitting}
-            />
-            {errors.title && (
-              <p className="text-sm text-destructive">{errors.title.message}</p>
-            )}
-          </div>
-
-          <div className="space-y-2">
-            <Label htmlFor="description">–û–ø–∏—Å (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)</Label>
-            <Textarea
-              id="description"
-              {...register('description')}
-              placeholder="–í–≤–µ–¥—ñ—Ç—å –æ–ø–∏—Å –∑–∞–≤–¥–∞–Ω–Ω—è"
-              disabled={isSubmitting}
-              rows={3}
-            />
-            {errors.description && (
-              <p className="text-sm text-destructive">{errors.description.message}</p>
-            )}
-          </div>
-
-          <DialogFooter>
-            <Button
-              type="button"
-              variant="outline"
-              onClick={handleClose}
-              disabled={isSubmitting}
-            >
-              –°–∫–∞—Å—É–≤–∞—Ç–∏
-            </Button>
-            <Button type="submit" disabled={isSubmitting}>
-              {isSubmitting
-                ? isEdit
-                  ? '–û–Ω–æ–≤–ª–µ–Ω–Ω—è...'
-                  : '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è...'
-                : isEdit
-                ? '–û–Ω–æ–≤–∏—Ç–∏'
-                : '–°—Ç–≤–æ—Ä–∏—Ç–∏'}
-            </Button>
-          </DialogFooter>
-        </form>
-      </DialogContent>
-    </Dialog>
-  );
-}
\ No newline at end of file
diff --git a/apps/web/src/components/ui/button.tsx b/apps/web/src/components/ui/button.tsx
index 57ad596..f4ed2db 100644
--- a/apps/web/src/components/ui/button.tsx
+++ b/apps/web/src/components/ui/button.tsx
@@ -9,7 +9,7 @@ const buttonVariants = cva(
   {
     variants: {
       variant: {
-        default: "bg-primary text-primary-foreground shadow hover:bg-primary/90",
+        default: "bg-primary text-white shadow-card hover:opacity-90",
         destructive:
           "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
         outline:
diff --git a/apps/web/src/lib/api.ts b/apps/web/src/lib/api.ts
deleted file mode 100644
index 1cfa41d..0000000
--- a/apps/web/src/lib/api.ts
+++ /dev/null
@@ -1,110 +0,0 @@
-import { ApiError } from '@/types/task';
-
-const BASE_URL = process.env.NEXT_PUBLIC_API_URL!;
-
-if (!BASE_URL) {
-  throw new Error('NEXT_PUBLIC_API_URL environment variable is required');
-}
-
-interface RequestConfig extends RequestInit {
-  timeout?: number;
-}
-
-async function request<T>(
-  path: string, 
-  options: RequestConfig = {}
-): Promise<T> {
-  const { timeout = 10000, ...requestOptions } = options;
-  
-  const controller = new AbortController();
-  const timeoutId = setTimeout(() => controller.abort(), timeout);
-
-  const url = `${BASE_URL}${path.startsWith('/') ? path : `/${path}`}`;
-  
-  const config: RequestInit = {
-    ...requestOptions,
-    signal: controller.signal,
-    headers: {
-      'Content-Type': 'application/json',
-      ...requestOptions.headers,
-    },
-  };
-
-  try {
-    const response = await fetch(url, config);
-    clearTimeout(timeoutId);
-
-    // Handle non-JSON responses (like 204 No Content)
-    const contentType = response.headers.get('content-type');
-    let data: any = null;
-    
-    if (contentType && contentType.includes('application/json')) {
-      data = await response.json();
-    }
-
-    if (!response.ok) {
-      const errorMessage = data?.error || data?.message || `HTTP ${response.status}: ${response.statusText}`;
-      throw new ApiError(response.status, errorMessage, data);
-    }
-
-    return data;
-  } catch (error) {
-    clearTimeout(timeoutId);
-    
-    if (error instanceof ApiError) {
-      throw error;
-    }
-    
-    if (error instanceof DOMException && error.name === 'AbortError') {
-      throw new ApiError(408, 'Request timeout');
-    }
-    
-    throw new ApiError(0, 'Network error', error);
-  }
-}
-
-export async function get<T>(path: string, options?: RequestConfig): Promise<T> {
-  return request<T>(path, { method: 'GET', ...options });
-}
-
-export async function post<T>(
-  path: string, 
-  body: unknown, 
-  options?: RequestConfig
-): Promise<T> {
-  return request<T>(path, {
-    method: 'POST',
-    body: JSON.stringify(body),
-    ...options,
-  });
-}
-
-export async function put<T>(
-  path: string, 
-  body: unknown, 
-  options?: RequestConfig
-): Promise<T> {
-  return request<T>(path, {
-    method: 'PUT',
-    body: JSON.stringify(body),
-    ...options,
-  });
-}
-
-export async function del<T>(path: string, options?: RequestConfig): Promise<T> {
-  return request<T>(path, { method: 'DELETE', ...options });
-}
-
-// Utility function to build query strings
-export function buildQueryString(params: Record<string, any>): string {
-  const searchParams = new URLSearchParams();
-  
-  Object.entries(params).forEach(([key, value]) => {
-    if (value !== undefined && value !== null && value !== '') {
-      searchParams.append(key, String(value));
-    }
-  });
-  
-  const queryString = searchParams.toString();
-  return queryString ? `?${queryString}` : '';
-}
\ No newline at end of file
diff --git a/apps/web/src/lib/queries.ts b/apps/web/src/lib/queries.ts
deleted file mode 100644
index 1618918..0000000
--- a/apps/web/src/lib/queries.ts
+++ /dev/null
@@ -1,104 +0,0 @@
-import { 
-  useQuery, 
-  useMutation, 
-  useQueryClient,
-  UseQueryOptions,
-  UseMutationOptions 
-} from '@tanstack/react-query';
-import { 
-  Task, 
-  TaskListResponse, 
-  TaskListParams,
-  CreateTaskInput,
-  UpdateTaskInput,
-  ApiError 
-} from '@/types/task';
-import { get, post, put, del, buildQueryString } from '@/lib/api';
-
-// Query Keys
-export const taskKeys = {
-  all: ['tasks'] as const,
-  lists: () => [...taskKeys.all, 'list'] as const,
-  list: (params: TaskListParams) => [...taskKeys.lists(), params] as const,
-  details: () => [...taskKeys.all, 'detail'] as const,
-  detail: (id: string) => [...taskKeys.details(), id] as const,
-};
-
-// Hooks for Tasks
-export function useTasks(
-  params: TaskListParams = {},
-  options?: UseQueryOptions<TaskListResponse, ApiError>
-) {
-  const queryString = buildQueryString(params);
-  
-  return useQuery<TaskListResponse, ApiError>({
-    queryKey: taskKeys.list(params),
-    queryFn: () => get<TaskListResponse>(`/api/tasks${queryString}`),
-    staleTime: 1000 * 60 * 5, // 5 minutes
-    ...options,
-  });
-}
-
-export function useTask(
-  id: string,
-  options?: UseQueryOptions<Task, ApiError>
-) {
-  return useQuery<Task, ApiError>({
-    queryKey: taskKeys.detail(id),
-    queryFn: () => get<Task>(`/api/tasks/${id}`),
-    enabled: !!id,
-    staleTime: 1000 * 60 * 5, // 5 minutes
-    ...options,
-  });
-}
-
-export function useCreateTask(
-  options?: UseMutationOptions<Task, ApiError, CreateTaskInput>
-) {
-  const queryClient = useQueryClient();
-  
-  return useMutation<Task, ApiError, CreateTaskInput>({
-    mutationFn: (input) => post<Task>('/api/tasks', input),
-    onSuccess: () => {
-      // Invalidate and refetch task lists
-      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });
-    },
-    ...options,
-  });
-}
-
-export function useUpdateTask(
-  options?: UseMutationOptions<Task, ApiError, { id: string; input: UpdateTaskInput }>
-) {
-  const queryClient = useQueryClient();
-  
-  return useMutation<Task, ApiError, { id: string; input: UpdateTaskInput }>({
-    mutationFn: ({ id, input }) => put<Task>(`/api/tasks/${id}`, input),
-    onSuccess: (data) => {
-      // Update the specific task in cache
-      queryClient.setQueryData(taskKeys.detail(data.id), data);
-      
-      // Invalidate task lists to reflect changes
-      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });
-    },
-    ...options,
-  });
-}
-
-export function useDeleteTask(
-  options?: UseMutationOptions<{ ok: boolean }, ApiError, string>
-) {
-  const queryClient = useQueryClient();
-  
-  return useMutation<{ ok: boolean }, ApiError, string>({
-    mutationFn: (id) => del<{ ok: boolean }>(`/api/tasks/${id}`),
-    onSuccess: (_, id) => {
-      // Remove the specific task from cache
-      queryClient.removeQueries({ queryKey: taskKeys.detail(id) });
-      
-      // Invalidate task lists
-      queryClient.invalidateQueries({ queryKey: taskKeys.lists() });
-    },
-    ...options,
-  });
-}
\ No newline at end of file
diff --git a/apps/web/src/lib/robot-api.ts b/apps/web/src/lib/robot-api.ts
index cff0eb9..738307a 100644
--- a/apps/web/src/lib/robot-api.ts
+++ b/apps/web/src/lib/robot-api.ts
@@ -74,14 +74,28 @@ class RobotApiClient {
         },
       });
 
-      const data = await response.json();
+      // Handle responses without content (204, etc.)
+      let data: any = null;
+      const text = await response.text();
+      
+      if (text) {
+        try {
+          data = JSON.parse(text);
+        } catch (e) {
+          // If response is not JSON, treat as plain text
+          data = text;
+        }
+      }
 
       if (!response.ok) {
-        throw new Error(data.message || `HTTP ${response.status}: ${response.statusText}`);
+        const errorMessage = (data && typeof data === 'object' && data.message) 
+          ? data.message 
+          : `HTTP ${response.status}: ${response.statusText}`;
+        throw new Error(errorMessage);
       }
 
       return {
-        data: data.data || data,
+        data: data,
         success: true,
       };
     } catch (error) {
diff --git a/apps/web/src/lib/validations.ts b/apps/web/src/lib/validations.ts
deleted file mode 100644
index 08001be..0000000
--- a/apps/web/src/lib/validations.ts
+++ /dev/null
@@ -1,34 +0,0 @@
-import { z } from "zod";
-
-export const createTaskSchema = z.object({
-  title: z
-    .string()
-    .min(1, "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π")
-    .min(2, "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –ø—Ä–∏–Ω–∞–π–º–Ω—ñ 2 —Å–∏–º–≤–æ–ª–∏")
-    .max(100, "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –º–æ–∂–µ –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 100 —Å–∏–º–≤–æ–ª—ñ–≤"),
-  description: z
-    .string()
-    .max(500, "–û–ø–∏—Å –Ω–µ –º–æ–∂–µ –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 500 —Å–∏–º–≤–æ–ª—ñ–≤")
-    .optional(),
-});
-
-export const updateTaskSchema = z.object({
-  title: z
-    .string()
-    .min(1, "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π")
-    .min(2, "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –ø—Ä–∏–Ω–∞–π–º–Ω—ñ 2 —Å–∏–º–≤–æ–ª–∏")
-    .max(100, "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –º–æ–∂–µ –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 100 —Å–∏–º–≤–æ–ª—ñ–≤")
-    .optional(),
-  description: z
-    .string()
-    .max(500, "–û–ø–∏—Å –Ω–µ –º–æ–∂–µ –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 500 —Å–∏–º–≤–æ–ª—ñ–≤")
-    .optional(),
-  status: z
-    .enum(["new", "in_progress", "done", "failed"], {
-      message: "–ù–µ–≤—ñ—Ä–Ω–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–≤–¥–∞–Ω–Ω—è",
-    })
-    .optional(),
-});
-
-export type CreateTaskFormData = z.infer<typeof createTaskSchema>;
-export type UpdateTaskFormData = z.infer<typeof updateTaskSchema>;
\ No newline at end of file
diff --git a/apps/web/src/types/task.ts b/apps/web/src/types/task.ts
deleted file mode 100644
index d624c4b..0000000
--- a/apps/web/src/types/task.ts
+++ /dev/null
@@ -1,51 +0,0 @@
-export type ID = string;
-
-export interface Task {
-  id: ID;
-  title: string;
-  description?: string;
-  status: 'new' | 'in_progress' | 'done' | 'failed';
-  createdAt: string; // ISO string
-  updatedAt: string; // ISO string
-}
-
-export interface CreateTaskInput {
-  title: string;
-  description?: string;
-}
-
-export interface UpdateTaskInput {
-  title?: string;
-  description?: string;
-  status?: Task['status'];
-}
-
-export interface TaskListParams {
-  search?: string;
-  page?: number;
-  limit?: number;
-}
-
-export interface TaskListResponse {
-  items: Task[];
-  total: number;
-  page?: number;
-  limit?: number;
-}
-
-export interface ApiResponse<T = any> {
-  data?: T;
-  error?: string;
-  message?: string;
-}
-
-export class ApiError extends Error {
-  constructor(
-    public status: number,
-    message: string,
-    public details?: any
-  ) {
-    super(message);
-    this.name = 'ApiError';
-  }
-}
\ No newline at end of file
diff --git a/apps/web/tailwind.config.js b/apps/web/tailwind.config.js
index 4d9772a..6b7cd96 100644
--- a/apps/web/tailwind.config.js
+++ b/apps/web/tailwind.config.js
@@ -1,39 +1,24 @@
 /** @type {import('tailwindcss').Config} */
-module.exports = {
+export default {
   content: [
-    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
-    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
-    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
+    "./src/app/**/*.{ts,tsx}",
+    "./src/components/**/*.{ts,tsx}",
+    "./src/pages/**/*.{ts,tsx}",
   ],
   theme: {
     extend: {
       colors: {
         // ROBOT Design Tokens
-        'robot-primary': 'var(--color-primary)',
-        'robot-surface': 'var(--color-surface)', 
-        'robot-ink': 'var(--color-ink)',
+        primary: "var(--color-primary)",
+        surface: "var(--color-surface)", 
+        ink: "var(--color-ink)",
         
         // shadcn/ui compatibility
         border: "hsl(var(--border))",
         input: "hsl(var(--input))",
         ring: "hsl(var(--ring))",
-        background: "hsl(var(--background))",
-        foreground: "hsl(var(--foreground))",
-        primary: {
-          DEFAULT: "var(--color-primary)",
-          50: "#FDF6F5",
-          100: "#FBECEA",
-          200: "#F6D4D0",
-          300: "#F0BCB5",
-          400: "#E5A49B",
-          500: "#CB5544",
-          600: "#B54A39",
-          700: "#9F3F2E",
-          800: "#893423",
-          900: "#732918",
-          950: "#5D1E0C",
-          foreground: "hsl(var(--primary-foreground))",
-        },
+        background: "var(--background)",
+        foreground: "var(--foreground)",
         secondary: {
           DEFAULT: "hsl(var(--secondary))",
           foreground: "hsl(var(--secondary-foreground))",
@@ -61,17 +46,12 @@ module.exports = {
       },
       borderRadius: {
         // ROBOT Design Tokens
-        'robot-lg': 'var(--radius-lg)',
-        'robot-md': 'var(--radius-md)',
-        'robot-sm': 'var(--radius-sm)',
-        
-        // shadcn/ui compatibility
-        lg: "var(--radius)",
-        md: "calc(var(--radius) - 2px)",
-        sm: "calc(var(--radius) - 4px)",
+        lg: "var(--radius-lg)",
+        md: "var(--radius-md)",
+        sm: "var(--radius-sm)",
       },
       boxShadow: {
-        'robot-card': 'var(--shadow-card)',
+        card: "var(--shadow-card)",
       },
       keyframes: {
         "accordion-down": {
@@ -90,4 +70,4 @@ module.exports = {
     },
   },
   plugins: [],
-}
\ No newline at end of file
+};
\ No newline at end of file
